class Solution {
public:
    void dfs(vector<vector<char>>& grid,vector<vector<bool>>& visited,int i,int j){
        int n=grid.size();
        int m=grid[0].size();
        if(i<0||i>=n||j<0||j>=m||grid[i][j]=='0'||visited[i][j]==true){
            return;
        }
        visited[i][j]=true;
        dfs(grid,visited,i,j-1);
        dfs(grid,visited,i-1,j);
        dfs(grid,visited,i,j+1);
        dfs(grid,visited,i+1,j);
    }
    int numIslands(vector<vector<char>>& grid) {
        int count=0;
        int n=grid.size();
        int m=grid[0].size();
        vector<vector<bool>> visited(n,vector<bool>(m,false));
        for(int i=0;i<grid.size();i++){
            for(int j=0;j<grid[i].size();j++){
                if(grid[i][j]=='1'&&visited[i][j]==false){
                    dfs(grid,visited,i,j);
                    count++;
                }
            }
        }
        return count;
    }
};