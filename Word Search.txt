class Solution {
public:
    bool dfs(vector<vector<char>>& board,int i,int j,string word,int k){
        if(k==word.size()){
            return true;
        }
        int n=board.size();
        int m=board[0].size();
        if(i<0||i>=n||j<0||j>=m||board[i][j]!=word[k]){
            return false;
        }
        board[i][j]='\0';
        bool flag=dfs(board,i-1,j,word,k+1)||dfs(board,i,j+1,word,k+1)||dfs(board,i+1,j,word,k+1)||dfs(board,i,j-1,word,k+1);
        board[i][j]=word[k];
        return flag;
    }
    bool exist(vector<vector<char>>& board, string word) {
        int n=board.size();
        int m=board[0].size();
        if(word== ""){
            return false;
        }
        
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                    if(board[i][j]==word[0]&&dfs(board,i,j,word,0)){
                        return true;
                    }
                
            }
        }
        return false;
    }
};