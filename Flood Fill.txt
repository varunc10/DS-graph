class Solution {
public:
    void dfs(vector<vector<int>>& image,vector<vector<bool>>& vis,int i,int j,int &k,int &newColor){
        int m=image.size();
        int n=image[0].size();
        if(i>=m||i<0||j>=n||j<0||vis[i][j]==true||image[i][j]!=k){
            return;
        }
        vis[i][j]=true;
        image[i][j]=newColor;
        dfs(image,vis,i-1,j,k,newColor);
        dfs(image,vis,i,j+1,k,newColor);
        dfs(image,vis,i+1,j,k,newColor);
        dfs(image,vis,i,j-1,k,newColor);
        return;
    }
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int newColor) {
        int m=image.size();
        int n=image[0].size();
        int k=image[sr][sc];
        vector<vector<bool>> vis(m,vector<bool>(n,false));
        dfs(image,vis,sr,sc,k,newColor);
        return image;
    }
};